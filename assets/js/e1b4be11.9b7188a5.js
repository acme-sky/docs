"use strict";(self.webpackChunkacme_sky_docs=self.webpackChunkacme_sky_docs||[]).push([[266],{2253:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var t=i(4848),s=i(8453);const o={sidebar_position:5,slug:"/services/geodistance"},a="Geodistance",r={id:"services/geodistance",title:"Geodistance",description:'Il servizio "Geodistance" \xe8 un componente fondamentale utilizzato da ACMESky per calcolare la distanza tra due punti nello spazio, espressa in metri. \xc8 utilizzato dal worker in diversi punti.',source:"@site/docs/services/geodistance.md",sourceDirName:"services",slug:"/services/geodistance",permalink:"/docs/services/geodistance",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,slug:"/services/geodistance"},sidebar:"defaultSidebar",previous:{title:"Rent",permalink:"/docs/services/rent"},next:{title:"Prontogram",permalink:"/docs/services/prontogram"}},c={},d=[{value:"Set up",id:"set-up",level:2},{value:"API",id:"api",level:2},{value:"<code>FindGeometry</code>",id:"findgeometry",level:3},{value:"<code>FindDistance</code>",id:"finddistance",level:3},{value:"Uso",id:"uso",level:2},{value:"Codice sorgente",id:"codice-sorgente",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"geodistance",children:"Geodistance"}),"\n",(0,t.jsx)(n.p,{children:'Il servizio "Geodistance" \xe8 un componente fondamentale utilizzato da ACMESky per calcolare la distanza tra due punti nello spazio, espressa in metri. \xc8 utilizzato dal worker in diversi punti.'}),"\n",(0,t.jsx)(n.h2,{id:"set-up",children:"Set up"}),"\n",(0,t.jsx)(n.p,{children:'Prima di utilizzare il servizio "Geodistance", \xe8 necessario configurarlo correttamente. Ecco i passaggi da seguire:'}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Ottenere una chiave API da Google Developer Console"}),': Il servizio "Geodistance" fa uso delle API di Google Places, pertanto \xe8 necessario creare una chiave API tramite Google Developer Console. La chiave deve avere accesso alle API necessarie, inclusa la ',(0,t.jsx)(n.strong,{children:"Distance Matrix API"}),", la ",(0,t.jsx)(n.strong,{children:"Directions API"})," e la ",(0,t.jsx)(n.strong,{children:"Geocoding API"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Client gRPC"}),': Per comunicare con il servizio "Geodistance", \xe8 necessario disporre di un client capace di inviare messaggi gRPC. Bisogna assicurarsi che il client sia configurato correttamente per comunicare con il servizio utilizzando la specifica di protocollo qui descritta.']}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-proto",children:'syntax = "proto3";\n\noption go_package = "github.com/acme-sky/geodistance-api/proto";\n\npackage distance;\n\n// The definition for a distance service\nservice Distance\n{\n    // Sends a distance value in meters\n    rpc FindDistance(DistanceRequest) returns (DistanceResponse) {}\n\n    // Sends an address and returns a map position geometry\n    rpc FindGeometry(AddressRequest) returns (MapPosition) {}\n}\n\n// Mesasage that refers to a map position tuple (latitude / longitude)\nmessage MapPosition\n{\n    float latitude = 1;\n    float longitude = 2;\n}\n\n// The request message containing two tuple of lat and lon\nmessage DistanceRequest\n{\n    MapPosition origin = 1;\n    MapPosition destination = 2;\n}\n\n// The response message containing the distance between the two positions in\n// meters format\nmessage DistanceResponse\n{\n    string origin = 1;\n    string destination = 2;\n    int32 distance = 3;\n}\n\n// Address request\nmessage AddressRequest\n{\n    string address = 1;\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,t.jsx)(n.h3,{id:"findgeometry",children:(0,t.jsx)(n.code,{children:"FindGeometry"})}),"\n",(0,t.jsx)(n.p,{children:"Metodo usato per trovare la geometria di latitudine e longitudine dato un\nindirizzo in formato stringa."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'c := pb.NewDistanceClient(conn)\n\nctx, cancel := context.WithTimeout(context.Background(), time.Second)\ndefer cancel()\nr, err := c.FindGeometry(ctx, &pb.AddressRequest{Address: "Mura Anteo Zamboni 7, Bologna"})\nif err != nil {\n    log.Fatalf("Could not find geometry: %v", err)\n}\nlog.Printf("%d", r)\n\n'})}),"\n",(0,t.jsx)(n.p,{children:"il client avr\xe0 in output la seguente stringa:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"2024/06/03 22:40:18 latitude:44.497066 longitude:11.356107\n"})}),"\n",(0,t.jsx)(n.h3,{id:"finddistance",children:(0,t.jsx)(n.code,{children:"FindDistance"})}),"\n",(0,t.jsx)(n.p,{children:"Metodo usato per trovare la distanza tra due geometrie."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'c := pb.NewDistanceClient(conn)\n\nctx, cancel := context.WithTimeout(context.Background(), time.Second)\ndefer cancel()\nr, err := c.FindDistance(ctx, &pb.DistanceRequest{\n    Origin: &pb.MapPosition{Latitude: 44.4969, Longitude: 11.3564347},\n    Destination: &pb.MapPosition{Latitude: 37.5257372, Longitude: 15.0702872}})\nif err != nil {\n    log.Fatalf("Could not find distance: %v", err)\n}\n\nlog.Printf("%d", r.GetDistance())\n'})}),"\n",(0,t.jsx)(n.p,{children:"il client avr\xe0 in output la seguente stringa:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'2024/04/15 14:21:21 origin:"Mura Anteo Zamboni, 7, 40126 Bologna BO, Italy" destination:"Viale Andrea Doria, 6, 95125 Catania CT, Italy" distance:1152664\n'})}),"\n",(0,t.jsx)(n.h2,{id:"uso",children:"Uso"}),"\n",(0,t.jsx)(n.p,{children:"Geodistance \xe8 usato da ACMESky in diversi casi:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Trova la distanza Utente - Aeroporto"}),": Il servizio calcola la distanza tra la posizione dell'utente e l'aeroporto di partenza del viaggio. Questo aiuta ACMESky a fornire all'utente informazioni precise sulla distanza tra la propria posizione e l'aeroporto."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsxs)(n.strong,{children:["Trova la distanza dei ",(0,t.jsx)(n.a,{href:"/services/rent/",children:"Rent"})]}),": Il servizio calcola le distanze tra tutte le compagnie di taxi disponibili e la posizione dell'utente. Utilizzando queste informazioni, ACMESky identifica la compagnia di taxi pi\xf9 vicina all'utente, facilitando il trasferimento rapido e conveniente da casa all'aeroporto."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"codice-sorgente",children:"Codice sorgente"}),"\n",(0,t.jsxs)(n.p,{children:["Il server, scritto anch'esso in Go, \xe8 presente alla seguente ",(0,t.jsx)(n.a,{href:"https://github.com/acme-sky/geodistance-api",children:"repository Github"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var t=i(6540);const s={},o=t.createContext(s);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);