"use strict";(self.webpackChunkacme_sky_docs=self.webpackChunkacme_sky_docs||[]).push([[497],{9798:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var i=t(4848),s=t(8453);const a={sidebar_position:3,slug:"/choreos/"},r="Coreografie",o={id:"Coreografie",title:"Coreografie",description:"Legenda",source:"@site/docs/Coreografie.md",sourceDirName:".",slug:"/choreos/",permalink:"/docs/choreos/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,slug:"/choreos/"},sidebar:"defaultSidebar",previous:{title:"Diagramma BPMN",permalink:"/docs/bpmn/"},next:{title:"Architettura",permalink:"/docs/architecture/"}},c={},d=[{value:"Legenda",id:"legenda",level:3}];function l(e){const n={code:"code",h1:"h1",h3:"h3",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"coreografie",children:"Coreografie"}),"\n",(0,i.jsx)(n.h3,{id:"legenda",children:"Legenda"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Nome"}),(0,i.jsx)(n.th,{children:"Sigla"}),(0,i.jsx)(n.th,{children:"Note"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ACME"}),(0,i.jsx)(n.td,{children:"ACME"}),(0,i.jsx)(n.td,{children:"Indica l'azienda AcmeSky"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Airline service"}),(0,i.jsxs)(n.td,{children:["AIR",(0,i.jsx)("sub",{children:"k"})]}),(0,i.jsx)(n.td,{children:"Indica la k-esima compagnia aerea"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Rental service"}),(0,i.jsxs)(n.td,{children:["RENT",(0,i.jsx)("sub",{children:"t"})]}),(0,i.jsx)(n.td,{children:"Indica la t-esima compagnia di noleggio"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Prontogram"}),(0,i.jsx)(n.td,{children:"PTG"}),(0,i.jsx)(n.td,{children:"Indica il servizio di messagistica"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Bank service"}),(0,i.jsx)(n.td,{children:"BANK"}),(0,i.jsx)(n.td,{children:"Indica il servizio bancario"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Geodistance service"}),(0,i.jsx)(n.td,{children:"GEO"}),(0,i.jsx)(n.td,{children:"Indica il servizio di calcolo distanze"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"User"}),(0,i.jsxs)(n.td,{children:["USER",(0,i.jsx)("sub",{children:"x"})]}),(0,i.jsx)(n.td,{children:"Indica l'x-esimo utente"})]})]})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-JS",children:"\n// Registrazione interesse dell'utente (ripetuta per tutti gli  utenti)\n// requestInterest: messaggio di richiesta con A/R\n// responseInterest: risposta successo o fallimento\n( requestInterest: USER\u2093 -> ACME ; responseInterest: ACME -> USER\u2093 )* \n|   \n\n// Query dei voli (ripetuta per tutte le compagnie aeree)\n// Viene ripetuta per ogni compagnia aerea collegata ad ACMEsky\n// queryFlights: Richesta di voli d'interesse per l'utente\n// responseFlights: Voli disponibili dell'Airline company\n( queryFlights: ACME -> AIR\u2096 ; responseFlights: AIR\u2096 -> ACME )* \n| \n\n// Ricezione offerte last minute (ripetuta per tutte le compagnie aeree)\n// Viene ripetuta per ogni compagnia aerea collegata ad ACMEsky\n// sendLastMinute: invia le offerte last minute\n// repsponseLastMinute: risposta successo o fallimento\n( sendLastMinute: AIR\u2096 -> ACME ; repsponseLastMinute: ACME -> AIR\u2096 )*\n|\n\n// Notifica dell'offerta all'utente\n// offerToken: mesaagio di offerta A/R\n// notifyUser: messaggio di notifica di Prontogram\n// notifyResponse: risposta da parte dell'utene dell'avvenuta ricezione\n// messageSended: risposta da parte di prontogram dell'avvenuto invio\n( offerToken: ACME -> PTG ; notifyUser: PTG -> USER\u2093 ; \n  notifyResponse: USER\u2093 -> PTG ; messageSended: PTG -> ACME )*\n|\n\n// Richiesta ticket\n// getInvoice: mesaagio di richiesta ricevuta dell'offerta pagata\n// invoice: messaggio con la ricevuta del viaggio\n( getInvoice: USER\u2093 -> ACME ; invoice: ACME -> USER\u2093 )*\n|\n\n// Conferma dell'offerta e pagamento\n// confirmOffer: messaggio di conferma offerta e pagamento\n( \n  confirmOffer: USER\u2093 -> ACME ; \n  (\n    // ACMEsky conferma che l'offerta \xe8 disponibile\n    // responseOfferOk: messaggio di conferma offerta\n    // requestPaymentLink: richiesta di pagamento da parte dell'utente\n    (   \n      responseOfferOk: ACME -> USER\u2093 ;\n      requestPaymentLink: USER\u2093 -> ACME ;\n      bookTickets: ACME -> AIR\u2096 ;\n      (   \n        // Tickets ok\n        // bookTickets: prenota i biglietti \n        // responseTickets: biglietti prenotati\n        // requestBankLink: richiesta creazione link di pagamento\n        // responselink: link di pagamento generato dalla banca\n        // paymentLink: link di pagamento generato dalla banca\n\n        (\n          responseTickets: AIR\u2096 -> ACME ;\n          requestBankLink: ACME -> BANK ; \n          responselink: BANK -> ACME ;\n          paymentLink: ACME -> USER\u2093 ;\n\n          (\n            // Pagamento avvenuto con successo\n            // successPaymentBank: esito pagamento\n            // payment: pagamento attraverso il link generato\n            (\n              payment: USER\u2093 -> BANK ;\n              successPaymentBank: BANK -> ACME ;\n              //sendConfirm: ACME -> BANK;\n              // Controllo Premium service\n              (\n                // Richiesta a Geodistance se costo > 1000\u20ac\n                1 \n                + \n                // requestDistance: richiesta calcolo della distanza\n                // responseDistance: distanza calcolata\n                (\n                  requestDistance: ACME -> GEO ; \n                  responseDistance: GEO -> ACME ; \n                  ( // Richiesta a Rent service se distanza <30Km\n                    1 \n                    +  \n                    (\n                      (\n                        // requestDistanceRent: richiesta distanza noleggio\n                        // responseDistanceRent: risposta con distanza\n                        requestDistanceRent: ACME -> GEO ; \n                        responseDistanceRent: GEO -> ACME ;\n                      )* ;\n                      // requestRent: richiesta noleggio\n                      // responseRent: risposta noleggio\n                      requestRent: ACME -> RENT\u209c ; \n                      responseRent: RENT\u209c-> ACME ;\n                    )\n                  )\n                )\n              ) ; // chiusura rent service\n                // SendJourneyReceipt: resoconto complessivo inviato all'utente\n                SendJourneyReceipt: ACME -> USER\u2093;\n            )\n          ) \n        )\n      ) //chiusura book tickets\n    )\n)*\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var i=t(6540);const s={},a=i.createContext(s);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);